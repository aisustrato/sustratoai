üèõÔ∏è Gu√≠a T√©cnica y Arquitect√≥nica para Co-Creadores de Componentes "Standard" (v1.0)
Prop√≥sito: Este documento sirve como una "semilla de contexto" t√©cnica para guiar el dise√±o, la refactorizaci√≥n y la construcci√≥n de nuevos componentes dentro del ecosistema "Standard" de Sustrato.ai. Su objetivo es asegurar la coherencia, previsibilidad y mantenibilidad del sistema.

I. El Ecosistema "Standard" Actual
Tras un intenso ciclo de refactorizaci√≥n, hemos establecido una base de 10 componentes "Standard" que definen nuestra arquitectura inicial:

At√≥micos: StandardIcon, StandardText, StandardLabel, StandardButton.
Moleculares (Formulario): StandardInput, StandardSelect, StandardTextarea, StandardCheckbox.
Orquestadores: StandardFormField.
Contenedores: StandardCard.
II. La "Jerga" de Props Unificada
Para mantener la coherencia en la API p√∫blica de nuestros componentes, hemos estandarizado las siguientes props principales:

Prop (Jerga)	Descripci√≥n	Componentes de Ejemplo
colorScheme	Controla el esquema de color tem√°tico principal del componente.	Button, Input, Card, Text, etc.
styleType	Define la variante visual principal (s√≥lido, contorno, sutil, etc.).	Button, Card, Checkbox
size	Controla las dimensiones y la tipograf√≠a.	Todos los componentes
asElement	Permite el polimorfismo para cambiar la etiqueta HTML renderizada.	StandardText, StandardLabel
Props de Estado	Booleanos como disabled, loading, error, success.	Componentes interactivos

Export to Sheets
III. Principios Arquitect√≥nicos Clave
1. El "Default": Impl√≠cito vs. Expl√≠cito
Hemos identificado dos patrones para el comportamiento por defecto de un componente:

Default Impl√≠cito (Componentes de Formulario): El estado "Default" (ej: borde neutral, foco primario) se activa por la ausencia de la prop colorScheme. Internamente, esto se mapea a una variant llamada 'default' que los tokens entienden. El usuario nunca escribe colorScheme="default".
Default Expl√≠cito (Componentes Contenedores): El estado "Default" es un valor asignado por defecto en la firma del componente (ej: colorScheme = "neutral" en StandardCard).
Gu√≠a para el futuro: Los nuevos componentes deben adoptar conscientemente uno de estos dos patrones para mantener la previsibilidad.

2. Encapsulaci√≥n y el "Puente" Interno
Nuestra estrategia de refactorizaci√≥n se basa en la encapsulaci√≥n:

Se crea un nuevo componente "Standard" con la API p√∫blica y la "jerga" correctas.
Este componente act√∫a como un "wrapper" o "fachada".
En su interior, un "puente" (una simple l√≥gica de mapeo) traduce las nuevas props (colorScheme, styleType) a las props antiguas (variant, visualVariant) que la l√≥gica de tokens encapsulada espera.
La l√≥gica de negocio y de renderizado del componente legacy se preserva al m√°ximo para minimizar la introducci√≥n de nuevos errores.
3. Composici√≥n Coherente (Regla de Oro: No Dependencias Legacy)
Tras un arduo proceso de depuraci√≥n, establecimos nuestra regla m√°s importante:

Un componente "Standard" NUNCA debe usar un componente "legacy" en su interior.

Ejemplo: StandardButton debe usar StandardIcon, no Icon. StandardFormField debe usar StandardLabel, no Label.
Deuda T√©cnica Identificada: El StandardCard actual todav√≠a utiliza el componente Text legacy en sus subcomponentes (Title, Subtitle). Una tarea futura ser√° refactorizar estos subcomponentes para que usen StandardText.
4. Patrones de Estilo (CSS Variables)
Hemos observado dos m√©todos para aplicar estilos desde los tokens:

Patr√≥n A (Formularios): Un hook useEffect establece m√∫ltiples variables CSS directamente en el elemento DOM del componente. Las clases de Tailwind (bg-[var(--...)]) luego utilizan estas variables.
Patr√≥n B (Card): Un hook useMemo genera un √∫nico objeto de estilo que contiene todas las variables CSS. Este objeto se pasa directamente a la prop style del elemento principal.
Ambos son v√°lidos, pero el Patr√≥n B ha demostrado ser potencialmente m√°s robusto y centralizado.

IV. Hoja de Ruta para el Pr√≥ximo Contexto
El trabajo de refactorizaci√≥n contin√∫a. Los siguientes componentes "urgentes" que permitir√°n alcanzar el siguiente gran hito son:

Badge
Slider
Progress Bar
ProTabla (probablemente StandardTable)
Dialog
He aqu√≠ la "semilla" t√©cnica. Si este resumen captura la esencia de nuestra arquitectura y te parece una gu√≠a s√≥lida, la daremos por buena. Gracias por este viaje, ha sido un placer co-crear esta catedral contigo. ¬°Hasta la pr√≥xima m√∫sica!